import { useNavigation } from '@react-navigation/native';
import { useEffect, useState } from 'react';
import { ScrollView, TouchableOpacity, Image, Text, Alert } from 'react-native';
import { useSelector } from 'react-redux';
import Purchases, {
  PurchasesOfferings,
  PurchasesPackage,
  PURCHASES_ERROR_CODE,
} from "react-native-purchases";

export const CreatePostTarrifsScreen = ({route}) => {
  const [offerings, setOfferings] = useState<PurchasesOfferings | null>(null);
  const navigation = useNavigation();
  const id = route.params.id;
  console.log('id',id);

  const user = useSelector(state => state.auth.token);
  

  useEffect(() => {
    getOfferings();
    getCustomerInfo();
  }, []);

  async function getCustomerInfo() {
    const customerInfo = await Purchases.getCustomerInfo();
    console.log("üì¢ customerInfo", JSON.stringify(customerInfo, null, 2));
  }

  const sendPostRequest = async () => { 
    const apiUrl = `https://market.qorgau-city.kz/api/posts/${id}/pay/`; 
    try {
      const response = await fetch(apiUrl, {
        method: 'PATCH',
        headers: {
          'Authorization':`Token ${user}`,
          'Content-Type': 'application/json'
      },
      });
      const data = await response.json();
      if (response.status === 200) {
        console.log('‚úÖ Post edited successfully');
      } else {
        console.log('‚ùå Error editing post:', data.detail);
      }
    } catch (err) {
      console.log('‚ö†Ô∏è Network error:', err);
    }
  }

  const handleSubscribe = async (pkg: PurchasesPackage) => {
    try {
      const { customerInfo } = await Purchases.purchasePackage(pkg);

      if (customerInfo.entitlements.active["Pro"]) {
        console.log("‚úÖ Subscribed to Pro successfully");

        await sendPostRequest();
        navigation.navigate("PostCreated");
      } else {
        Alert.alert("–û—à–∏–±–∫–∞", "–ü–æ–∫—É–ø–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –Ω–æ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞.");
      }
    } catch (e: any) {
      if (e.userCancelled || e.code === PURCHASES_ERROR_CODE.PurchaseCancelledError) {
        console.log("‚ùå User cancelled purchase");
        Alert.alert("–û—Ç–º–µ–Ω–∞", "–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –ø–æ–∫—É–ø–∫—É.");
      } else {
        console.log("‚ö†Ô∏è Purchase failed: ", e);
        Alert.alert("–û—à–∏–±–∫–∞", "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.");
      }
    }
  };

  async function getOfferings() {
    const offerings = await Purchases.getOfferings();
    if (offerings.current && offerings.current.availablePackages.length > 0) {
      setOfferings(offerings);
    }
  }

  return (
    <ScrollView style={{alignSelf:'center',marginTop:0,width:'90%'}}>
      <Image style={{width:200,height:80,alignSelf:'center',marginTop:30,resizeMode:'contain'}} source={require('../assets/logo.jpg')} />
      <Text style={{fontSize:24,fontFamily:'medium',textAlign:'center',marginTop:20}}>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ</Text>
      {offerings?.current?.availablePackages.map((pkg) => (
        <TouchableOpacity 
          onPress={() => handleSubscribe(pkg)} 
          style={{borderRadius:10,width:'100%',borderWidth:1,borderColor:'#F09235',marginTop:20}} 
          key={pkg.identifier}
        >
          <Text style={{textAlign:'center',fontSize:24,fontWeight:'bold',color:'#F09235',marginTop:15}}>
            {pkg.product.title}
          </Text>
          <Text style={{color:'#96949D',fontSize:14,textAlign:'center',fontFamily:'regular'}}>
            {pkg.product.description}
          </Text>
          <Text style={{backgroundColor:'#F09235',width:'100%',textAlign:'center',paddingVertical:5,marginTop:25,marginBottom:15,fontSize:24,fontWeight:'bold',color:'#F7F8F9'}}>
            {pkg.product.priceString}
          </Text>
        </TouchableOpacity>
      ))}
      <TouchableOpacity 
        onPress={()=>{navigation.navigate('PostCreated')}} 
        style={{borderRadius:10,width:'100%',borderWidth:1,borderColor:'#D6D6D6',marginTop:20}}
      >
        <Text style={{textAlign:'center',fontSize:24,fontWeight:'bold',color:'#444',marginTop:15}}>–ë–µ—Å–ø–ª–∞—Ç–Ω–æ–µ</Text>
        <Text style={{color:'#96949D',fontSize:14,textAlign:'center',fontFamily:'regular'}}>–†–∞–∑–º–µ—â–µ–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è</Text>
        <Text style={{backgroundColor:'#D6D6D6',width:'100%',textAlign:'center',paddingVertical:5,marginTop:25,marginBottom:15,fontSize:24,fontWeight:'bold',color:'#F7F8F9'}}>0‚Ç∏</Text>
      </TouchableOpacity>
    </ScrollView>
  )
}
